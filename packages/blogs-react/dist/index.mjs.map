{"version":3,"sources":["../src/provider.tsx","../src/theme.ts","../src/layout/BlogLayout.tsx","../src/components/PostsListPage.tsx","../src/components/Pagination.tsx","../src/components/skeletons.tsx","../src/components/PostDetailsPage.tsx","../src/components/CommentsSection.tsx","../src/components/CategoryPage.tsx","../src/components/PostCard.tsx","../src/components/TagsListPage.tsx","../src/components/CategoriesListPage.tsx"],"sourcesContent":["// /packages/blogs-react/src/provider.tsx\n\"use client\";\n\nimport { DITBlogsClient } from \"@dishistech/blogs-sdk\";\nimport { createContext, useContext, ReactNode, useMemo, useEffect, ElementType } from \"react\";\nimport { SWRConfig } from \"swr\";\nimport { Theme, CustomTheme, lightTheme, darkTheme } from \"./theme\";\n\n\ninterface DITBlogsContextType {\n  client: DITBlogsClient;\n  Link: ElementType;\n}\n\nconst DITBlogsContext = createContext<DITBlogsContextType | null>(null);\n\n// RENAMED for clarity\nexport function useDITBlogsContext() {\n  const context = useContext(DITBlogsContext);\n  if (!context) throw new Error(\"useDITBlogsContext must be used within a DITBlogsProvider\");\n  return context; // Returns the whole { client, Link } object\n}\n\n\ninterface DITBlogsProviderProps {\n  children: ReactNode;\n  apiKey: string;\n  theme?: Theme | CustomTheme;\n  /**\n   * Provide a Link component from your routing library (e.g., next/link or react-router-dom's Link).\n   * Defaults to a standard HTML `<a>` tag.\n   */\n  linkComponent?: ElementType;\n}\n\nexport function DITBlogsProvider({ children, apiKey, theme = \"light\", linkComponent = 'a' }: DITBlogsProviderProps) {\n  const client = useMemo(() => new DITBlogsClient(apiKey), [apiKey]);\n\n  // Apply theme via CSS variables\n  useEffect(() => {\n    const root = document.documentElement;\n    const selectedTheme =\n      theme === \"light\" ? lightTheme :\n      theme === \"dark\" ? darkTheme :\n      theme;\n\n    root.style.setProperty('--background', selectedTheme.colors.background);\n    root.style.setProperty('--foreground', selectedTheme.colors.foreground);\n    root.style.setProperty('--card', selectedTheme.colors.card);\n    root.style.setProperty('--card-foreground', selectedTheme.colors.cardForeground);\n    root.style.setProperty('--primary', selectedTheme.colors.primary);\n    root.style.setProperty('--primary-foreground', selectedTheme.colors.primaryForeground);\n    root.style.setProperty('--muted', selectedTheme.colors.muted);\n    root.style.setProperty('--muted-foreground', selectedTheme.colors.mutedForeground);\n    \n    // Set color scheme for browser UI like scrollbars\n    root.style.colorScheme = theme === 'dark' ? 'dark' : 'light';\n    \n  }, [theme]);\n\n  const value = { client, Link: linkComponent };\n\n  return (\n    <DITBlogsContext.Provider value={value}>\n      <SWRConfig>{children}</SWRConfig>\n    </DITBlogsContext.Provider>\n  );\n}","// /packages/blogs-react/src/theme.ts\n\nexport type Theme = \"light\" | \"dark\";\n\nexport interface CustomTheme {\n  colors: {\n    background: string;       // e.g., #FFFFFF\n    foreground: string;       // e.g., #0A0A0A\n    card: string;             // e.g., #FFFFFF\n    cardForeground: string;   // e.g., #0A0A0A\n    primary: string;          // e.g., #3b82f6\n    primaryForeground: string;// e.g., #FFFFFF\n    muted: string;            // e.g., #f1f5f9\n    mutedForeground: string;  // e.g., #64748b\n  };\n  // Add other theme properties like borderRadius, fonts etc.\n}\n\nexport const lightTheme: CustomTheme = {\n  colors: {\n    background: \"hsl(0 0% 100%)\",\n    foreground: \"hsl(240 10% 3.9%)\",\n    card: \"hsl(0 0% 100%)\",\n    cardForeground: \"hsl(240 10% 3.9%)\",\n    primary: \"hsl(221 83% 53%)\",\n    primaryForeground: \"hsl(60 9% 98%)\",\n    muted: \"hsl(240 5% 96%)\",\n    mutedForeground: \"hsl(240 4% 46%)\",\n  },\n};\n\nexport const darkTheme: CustomTheme = {\n  colors: {\n    background: \"hsl(240 10% 3.9%)\",\n    foreground: \"hsl(0 0% 98%)\",\n    card: \"hsl(240 10% 3.9%)\",\n    cardForeground: \"hsl(0 0% 98%)\",\n    primary: \"hsl(217 91% 60%)\",\n    primaryForeground: \"hsl(210 20% 98%)\",\n    muted: \"hsl(240 4% 16%)\",\n    mutedForeground: \"hsl(240 5% 65%)\",\n  },\n};","// /packages/blogs-react/src/layout/BlogLayout.tsx\n\"use client\";\n\nimport { ElementType, ReactNode } from 'react';\nimport { DITBlogsProvider, useDITBlogsContext } from '../provider'; // Note: Only provider needs to be imported here now.\nimport { CustomTheme, Theme } from '../theme';\n\n// DEFINE THE MISSING INTERFACE\ninterface BlogLayoutProps {\n    children: ReactNode;\n    apiKey: string;\n    theme?: Theme | CustomTheme;\n    navLinks?: { href: string; label: string }[];\n    linkComponent?: ElementType;\n}\n\n\n// Header now uses the Link from context\nfunction Header({ navLinks }: { navLinks?: { href: string; label: string }[] }) {\n  const { Link } = useDITBlogsContext(); // Get the link component from our context\n  return (\n    <header className=\"sticky top-0 z-40 w-full border-b bg-background/95 backdrop-blur\">\n      <nav className=\"container mx-auto px-6 h-16 flex items-center justify-between\">\n        <Link href=\"/\" className=\"text-2xl font-bold text-foreground\">My Blog</Link>\n        <div className=\"flex items-center gap-6\">\n          {navLinks?.map(link => (\n            <Link key={link.href} href={link.href} className=\"text-sm font-medium text-muted-foreground hover:text-foreground\">\n              {link.label}\n            </Link>\n          ))}\n        </div>\n      </nav>\n    </header>\n  );\n}\n\n// Footer with branding\nfunction Footer() {\n  return (\n    <footer className=\"border-t mt-16\">\n      <div className=\"container mx-auto px-6 py-8 text-center text-sm text-muted-foreground\">\n        <p>Â© {new Date().getFullYear()} My Company, Inc. All Rights Reserved.</p>\n        <p className=\"mt-2\">\n          Powered by <a href=\"https://blogs.dishis.tech\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"font-semibold text-primary hover:underline\">blogs.dishis.tech</a>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\n// The main BlogLayout now passes the linkComponent to the provider\nexport function BlogLayout({ children, apiKey, theme, navLinks, linkComponent }: BlogLayoutProps) {\n  return (\n    <DITBlogsProvider apiKey={apiKey} theme={theme} linkComponent={linkComponent}>\n      <div className=\"flex flex-col min-h-screen bg-background text-foreground\">\n        <Header navLinks={navLinks} />\n        <main className=\"flex-grow container mx-auto px-6 py-12\">{children}</main>\n        <Footer />\n      </div>\n    </DITBlogsProvider>\n  );\n}","// /packages/blogs-react/src/components/PostsListPage.tsx\n\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport { useDITBlogsContext } from \"../provider\"; // Use the renamed hookimport { PostCardSkeleton } from \"./skeletons\"; // Skeletons are crucial!\nimport { Post } from \"@dishistech/blogs-sdk\";\nimport { ArrowRight, Search as SearchIcon, X } from \"lucide-react\";\nimport { Pagination } from \"./Pagination\";\nimport { PostCardSkeleton } from \"./skeletons\";\n\n// Debounce hook for search input\nfunction useDebounce(value: string, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n  return debouncedValue;\n}\n\nfunction SearchBar({ onSearchChange }: { onSearchChange: (query: string) => void }) {\n  const [query, setQuery] = useState(\"\");\n  const debouncedQuery = useDebounce(query, 500);\n\n  useEffect(() => {\n    onSearchChange(debouncedQuery);\n  }, [debouncedQuery, onSearchChange]);\n\n  return (\n    <div className=\"relative w-full max-w-md mx-auto mb-12\">\n      <SearchIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-muted-foreground\" />\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for posts...\"\n        className=\"w-full pl-10 pr-4 py-2 border rounded-lg bg-background\"\n      />\n    </div>\n  );\n}\n\nfunction PostCard({ post }: { post: Post }) {\n  return (\n    <a href={`/posts/${post.slug}`} className=\"block p-6 border rounded-lg hover:shadow-lg transition-shadow bg-card text-card-foreground border-muted\">\n      <h3 className=\"text-2xl font-bold text-primary\">{post.title}</h3>\n      <p className=\"text-muted-foreground mt-2\">{post.excerpt}</p>\n      <div className=\"flex items-center justify-between mt-4 text-sm text-muted-foreground\">\n        <span>By {post.author.name} &middot; {new Date(post.publishedAt).toLocaleDateString()}</span>\n        <span className=\"flex items-center gap-2 text-primary font-semibold\">Read More <ArrowRight size={16} /></span>\n      </div>\n    </a>\n  );\n}\n\nexport function PostsListPage({ category, tag }: { category?: string; tag?: string }) {\n  const {client} = useDITBlogsContext();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const { data, error, isLoading } = useSWR(\n    [\"posts\", category, tag, currentPage],\n    () => client.getPosts({ category, tag, page: currentPage })\n  );\n\n  const handlePageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n    window.scrollTo(0, 0); // Scroll to top on page change\n  };\n\n  if (error) return <div className=\"text-center text-red-500\">Failed to load posts.</div>;\n  if (isLoading) {\n    return (\n        <div className=\"grid md:grid-cols-2 gap-8\">\n            {[...Array(6)].map((_, i) => <PostCardSkeleton key={i} />)}\n        </div>\n    );\n  }\n  if (!data || data.posts.length === 0) return <div className=\"text-center text-muted-foreground mt-16\">No posts found.</div>;\n\n  return (\n    <div>\n      <div className=\"grid md:grid-cols-2 gap-8\">\n        {data.posts.map((post: Post) => <PostCard key={post.slug} post={post} />)}\n      </div>\n      <Pagination\n        currentPage={data.pagination.page}\n        totalPages={data.pagination.pages}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n}","// /packages/blogs-react/src/components/Pagination.tsx\n// NEW COMPONENT\n\nimport React from 'react';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n}\n\nexport function Pagination({ currentPage, totalPages, onPageChange }: PaginationProps) {\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  const handlePrevious = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <nav className=\"flex items-center justify-between mt-12\" aria-label=\"Pagination\">\n      <button\n        onClick={handlePrevious}\n        disabled={currentPage === 1}\n        className=\"px-4 py-2 text-sm font-medium border rounded-md bg-card text-card-foreground disabled:opacity-50 disabled:cursor-not-allowed hover:bg-muted flex items-center gap-2\"\n      >\n        <ChevronLeft size={16} />\n        Previous\n      </button>\n      <span className=\"text-sm text-muted-foreground\">\n        Page {currentPage} of {totalPages}\n      </span>\n      <button\n        onClick={handleNext}\n        disabled={currentPage === totalPages}\n        className=\"px-4 py-2 text-sm font-medium border rounded-md bg-card text-card-foreground disabled:opacity-50 disabled:cursor-not-allowed hover:bg-muted flex items-center gap-2\"\n      >\n        Next\n        <ChevronRight size={16} />\n      </button>\n    </nav>\n  );\n}","// /packages/blogs-react/src/components/skeletons.tsx\n\n/** A detailed skeleton for the single post page before content has loaded. */\nexport function PostDetailsSkeleton() {\n  return (\n    <div className=\"animate-pulse\">\n      <div className=\"max-w-2xl mx-auto text-center\">\n        <div className=\"h-6 w-1/4 bg-muted rounded mx-auto mb-4\"></div>\n        <div className=\"h-12 w-full bg-muted rounded mx-auto mb-6\"></div>\n        <div className=\"h-6 w-1/3 bg-muted rounded mx-auto\"></div>\n      </div>\n      <div className=\"prose dark:prose-invert lg:prose-xl mx-auto mt-12\">\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-full bg-muted rounded\"></div>\n          <div className=\"h-6 w-full bg-muted rounded\"></div>\n          <div className=\"h-6 w-11/12 bg-muted rounded\"></div>\n          <br />\n          <div className=\"h-6 w-full bg-muted rounded\"></div>\n          <div className=\"h-6 w-10/12 bg-muted rounded\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/** A skeleton for a single comment entry. */\nexport function CommentSkeleton() {\n    return (\n        <div className=\"flex items-start space-x-4 py-4 animate-pulse\">\n            <div className=\"w-10 h-10 rounded-full bg-muted shrink-0\"></div>\n            <div className=\"flex-1 space-y-2\">\n                <div className=\"h-4 w-1/4 bg-muted rounded\"></div>\n                <div className=\"h-4 w-full bg-muted rounded\"></div>\n                <div className=\"h-4 w-3/4 bg-muted rounded\"></div>\n            </div>\n        </div>\n    );\n}\n\n/** A skeleton for a single post card in a list. */\nexport function PostCardSkeleton() {\n  return (\n    <div className=\"p-6 border rounded-lg animate-pulse bg-card border-muted\">\n      <div className=\"h-8 w-3/4 bg-muted rounded mb-4\"></div>\n      <div className=\"h-4 w-full bg-muted rounded mb-2\"></div>\n      <div className=\"h-4 w-5/6 bg-muted rounded mb-4\"></div>\n      <div className=\"h-4 w-1/4 bg-muted rounded\"></div>\n    </div>\n  );\n}\n\n/** A skeleton for the entire comments section container. */\nexport function CommentsSectionSkeleton() {\n    return (\n        <div className=\"mt-8\">\n            <CommentSkeleton />\n            <div className=\"pl-14 border-l-2 border-muted ml-5\">\n                <CommentSkeleton />\n            </div>\n            <CommentSkeleton />\n        </div>\n    );\n}","// /packages/blogs-react/src/components/PostDetailsPage.tsx\n\"use client\";\n\nimport React from 'react';\nimport useSWR from 'swr';\nimport { useDITBlogsContext } from '../provider'; // Use renamed hook\nimport { PostDetailsSkeleton } from './skeletons';\nimport { CommentsSection } from './CommentsSection'; // We will create this next\n\ninterface PostDetailsPageProps {\n  /** The slug of the post to display. */\n  slug: string;\n  /**\n   * The auth token (e.g., JWT) for the logged-in user, required for posting comments.\n   * This should be managed by your main application's authentication system.\n   */\n  userToken?: string;\n}\n\nexport function PostDetailsPage({ slug, userToken }: PostDetailsPageProps) {\n  const {client} = useDITBlogsContext();\n  const { data: post, error, isLoading } = useSWR(['post', slug], () => client.getPost(slug));\n\n  if (isLoading) return <PostDetailsSkeleton />;\n  if (error) return <div className=\"text-center text-red-500 py-10\">Error loading post. Please try again later.</div>;\n  if (!post) return <div className=\"text-center text-muted-foreground py-10\">404 | Post not found.</div>;\n\n  return (\n    <article>\n      {/* Post Header */}\n      <header className=\"mb-12 text-center\">\n        {post.category && (\n            <a href={`/categories/${post.category.slug}`} className=\"text-primary font-semibold mb-2 block hover:underline\">\n                {post.category.name}\n            </a>\n        )}\n        <h1 className=\"text-4xl md:text-6xl font-extrabold text-foreground tracking-tight\">{post.title}</h1>\n        <div className=\"mt-6 text-muted-foreground\">\n          <span>By {post.author.name}</span> &middot; <span>Published on {new Date(post.publishedAt).toLocaleDateString()}</span>\n        </div>\n      </header>\n      \n      {/* Post Content */}\n      <div\n        className=\"prose dark:prose-invert lg:prose-xl mx-auto\"\n        dangerouslySetInnerHTML={{ __html: post.content || '' }}\n      />\n      \n      {/* Comments Section */}\n      <section id=\"comments\" className=\"max-w-3xl mx-auto mt-20\">\n        <h2 className=\"text-3xl font-bold mb-8 border-b pb-4 text-foreground\">Discussion</h2>\n        <CommentsSection postSlug={slug} userToken={userToken} />\n      </section>\n    </article>\n  );\n}","// /packages/blogs-react/src/components/CommentsSection.tsx\n\"use client\";\n\nimport React, { useState } from 'react';\nimport useSWR, { useSWRConfig } from 'swr';\nimport { useDITBlogsContext } from '../provider'; // Use renamed hook\nimport { Comment } from '@dishistech/blogs-sdk';\nimport { CommentsSectionSkeleton } from './skeletons';\nimport { CornerDownRight, Send } from 'lucide-react';\n\n// --- Reusable Comment Form ---\nfunction CommentForm({ postSlug, userToken, parentId, onCommentPosted }: { postSlug: string; userToken?: string; parentId?: string; onCommentPosted: () => void }) {\n    const {client} = useDITBlogsContext();\n    const { mutate } = useSWRConfig();\n    const [content, setContent] = useState(\"\");\n    const [error, setError] = useState<string | null>(null);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!content.trim() || !userToken) return;\n\n        setIsSubmitting(true);\n        setError(null);\n        try {\n            await client.postComment({ postSlug, content, parentId, userToken });\n            setContent(\"\");\n            onCommentPosted(); // Callback to hide form, etc.\n            mutate(['comments', postSlug]); // Revalidate comments after posting\n        } catch (err: any) {\n            setError(err.message || \"Failed to post comment.\");\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"mt-4\">\n            <textarea\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n                placeholder={parentId ? \"Write your reply...\" : \"Join the discussion...\"}\n                className=\"w-full p-2 border rounded-md bg-muted focus:ring-2 focus:ring-primary outline-none\"\n                rows={3}\n                disabled={isSubmitting || !userToken}\n            />\n            {userToken ? (\n                 <button type=\"submit\" disabled={isSubmitting || !content.trim()} className=\"mt-2 px-4 py-2 bg-primary text-primary-foreground rounded-md disabled:opacity-50 flex items-center gap-2\">\n                    {isSubmitting ? \"Posting...\" : <><Send size={16} />{parentId ? \"Post Reply\" : \"Post Comment\"}</>}\n                </button>\n            ) : (\n                <p className=\"text-sm text-muted-foreground mt-2\">Please sign in to post a comment.</p>\n            )}\n            {error && <p className=\"text-sm text-red-500 mt-1\">{error}</p>}\n        </form>\n    );\n}\n\n// --- Component to Render a Single Comment and its Replies ---\nfunction CommentItem({ comment, postSlug, userToken }: { comment: Comment; postSlug: string; userToken?: string; }) {\n    const [isReplying, setIsReplying] = useState(false);\n\n    return (\n        <div className=\"flex items-start space-x-4 py-4\">\n            <img src={`https://ui-avatars.com/api/?name=${comment.user.name}&background=random`} alt={comment.user.name || ''} className=\"w-10 h-10 rounded-full shrink-0\" />\n            <div className=\"flex-1\">\n                <div className=\"flex items-center gap-2\">\n                    <span className=\"font-bold text-foreground\">{comment.user.name}</span>\n                    <time className=\"text-xs text-muted-foreground\">{new Date(comment.createdAt).toLocaleString()}</time>\n                </div>\n                <p className=\"mt-1 text-foreground\">{comment.content}</p>\n                <button onClick={() => setIsReplying(!isReplying)} className=\"mt-2 text-sm font-semibold text-primary flex items-center gap-1\">\n                    <CornerDownRight size={14} /> Reply\n                </button>\n                {isReplying && <CommentForm postSlug={postSlug} parentId={comment.id} userToken={userToken} onCommentPosted={() => setIsReplying(false)} />}\n                {comment.replies?.length > 0 && (\n                    <div className=\"mt-4 pl-6 border-l-2 border-muted\">\n                        {comment.replies.map(reply => <CommentItem key={reply.id} comment={reply} postSlug={postSlug} userToken={userToken} />)}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\n// --- The Main Exported Component ---\nexport function CommentsSection({ postSlug, userToken }: { postSlug: string; userToken?: string }) {\n  const {client} = useDITBlogsContext();\n  const { data: comments, error, isLoading } = useSWR(['comments', postSlug], () => client.getComments(postSlug));\n\n  if (isLoading) return <CommentsSectionSkeleton />;\n  if (error) return <div className=\"text-red-500 text-center py-4\">Could not load comments.</div>;\n\n  return (\n    <div>\n      <h3 className=\"text-xl font-bold mb-4\">{comments?.length || 0} Comments</h3>\n      <CommentForm postSlug={postSlug} userToken={userToken} onCommentPosted={() => {}} />\n      <div className=\"mt-8 divide-y divide-muted\">\n        {comments && comments.length > 0 ? (\n          comments.map((comment: Comment) => <CommentItem key={comment.id} comment={comment} postSlug={postSlug} userToken={userToken} />)\n        ) : (\n          <p className=\"text-center text-muted-foreground py-8\">No comments yet. Be the first to start the discussion!</p>\n        )}\n      </div>\n    </div>\n  );\n}","\n\"use client\";\n\nimport React, { useState } from 'react';\nimport useSWR from 'swr';\nimport { useDITBlogsContext } from '../provider';\nimport { PostsListPage } from './PostsListPage';\nimport { PostCardSkeleton } from './skeletons';\nimport { Pagination } from './Pagination'; // Import Pagination\nimport { PostCard } from './PostCard';\nimport { Post } from '@dishistech/blogs-sdk';\n\nexport function CategoryPage({ slug }: { slug: string }) {\n    const {client} = useDITBlogsContext();\n    const [currentPage, setCurrentPage] = useState(1);\n    \n    // This SWR hook now also depends on currentPage\n    const { data, error, isLoading } = useSWR(['category', slug, currentPage], () => client.getCategory(slug, { page: currentPage }));\n    \n    const handlePageChange = (newPage: number) => {\n        setCurrentPage(newPage);\n        window.scrollTo(0, 0);\n    };\n\n    if (error) return <div className=\"text-red-500 text-center\">Failed to load category information.</div>;\n\n    const categoryInfo = data?.category;\n\n    return (\n        <div>\n            <header className=\"mb-12 text-center\">\n                {isLoading && !categoryInfo ? (\n                    <div className=\"h-10 w-1/3 bg-muted rounded mx-auto animate-pulse\"></div>\n                ) : (\n                    <h1 className=\"text-4xl font-extrabold text-foreground\">Category: {categoryInfo?.name}</h1>\n                )}\n                {categoryInfo?.description && <p className=\"mt-4 text-lg text-muted-foreground max-w-2xl mx-auto\">{categoryInfo.description}</p>}\n            </header>\n            \n            {/* Conditional rendering for posts list */}\n            {isLoading ? (\n                 <div className=\"grid md:grid-cols-2 gap-8\"><PostCardSkeleton /><PostCardSkeleton /></div>\n            ) : data && data.posts.length > 0 ? (\n                <div>\n                  {/* Since PostsListPage is now complex, we just repeat its internal logic */}\n                   <div className=\"grid md:grid-cols-2 gap-8\">\n                     {data.posts.map((post: Post) => <PostCard key={post.slug} post={post} />)}\n                   </div>\n                   <Pagination\n                     currentPage={data.pagination.page}\n                     totalPages={data.pagination.pages}\n                     onPageChange={handlePageChange}\n                   />\n                </div>\n            ) : (\n                <div className=\"text-center text-muted-foreground mt-16\">No posts found in this category.</div>\n            )}\n        </div>\n    );\n}","\"use client\";\n\nimport { Post } from \"@dishistech/blogs-sdk\";\nimport { useDITBlogsContext } from \"../provider\";\nimport { ArrowRight } from \"lucide-react\";\n\nexport function PostCard({ post }: { post: Post }) {\n  const { Link } = useDITBlogsContext();\n  return (\n    <Link href={`/posts/${post.slug}`} className=\"block p-6 border rounded-lg hover:shadow-lg transition-shadow bg-card text-card-foreground border-muted\">\n      <h3 className=\"text-2xl font-bold text-primary\">{post.title}</h3>\n      <p className=\"text-muted-foreground mt-2\">{post.excerpt}</p>\n      <div className=\"flex items-center justify-between mt-4 text-sm text-muted-foreground\">\n        <span>By {post.author.name} &middot; {new Date(post.publishedAt).toLocaleDateString()}</span>\n        <span className=\"flex items-center gap-2 text-primary font-semibold\">Read More <ArrowRight size={16} /></span>\n      </div>\n    </Link>\n  );\n}","// /packages/blogs-react/src/components/TagsListPage.tsx\n// NEW COMPONENT\n\n\"use client\";\n\nimport useSWR from 'swr';\nimport { useDITBlogsContext } from '../provider';\nimport { Tag } from '@dishistech/blogs-sdk';\n\nexport function TagsListPage() {\n  const {client} = useDITBlogsContext();\n  const { data: tags, error, isLoading } = useSWR('tags', () => client.getTags());\n\n  if (error) return <div className=\"text-center text-red-500\">Failed to load tags.</div>;\n  \n  if (isLoading) {\n      return <div className=\"text-center text-muted-foreground\">Loading tags...</div>\n  }\n  \n  if (!tags || tags.length === 0) return <div className=\"text-center text-muted-foreground\">No tags found.</div>;\n\n  return (\n    <div className=\"flex flex-wrap items-center justify-center gap-4\">\n      {tags.map((tag: Tag) => (\n        <a \n          key={tag.slug} \n          href={`/tags/${tag.slug}`} \n          className=\"px-4 py-2 text-sm font-medium border rounded-full bg-card hover:bg-primary hover:text-primary-foreground transition-colors\"\n        >\n          #{tag.name}\n        </a>\n      ))}\n    </div>\n  );\n}","// /packages/blogs-react/src/components/CategoriesListPage.tsx\n// NEW COMPONENT\n\n\"use client\";\n\nimport React from 'react';\nimport useSWR from 'swr';\nimport { useDITBlogsContext } from '../provider';\nimport { Tag as CategoryIcon } from 'lucide-react'; // Using Tag icon for visual consistency\nimport { Category } from '@dishistech/blogs-sdk';\n\nexport function CategoriesListPage() {\n  const {client} = useDITBlogsContext();\n  const { data: categories, error, isLoading } = useSWR('categories', () => client.getCategories());\n\n  if (error) return <div className=\"text-center text-red-500\">Failed to load categories.</div>;\n  \n  // Skeleton state for categories\n  if (isLoading) {\n    return (\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        {[...Array(8)].map((_, i) => (\n          <div key={i} className=\"p-6 bg-muted rounded-lg animate-pulse h-24\"></div>\n        ))}\n      </div>\n    );\n  }\n\n  if (!categories || categories.length === 0) return <div className=\"text-center text-muted-foreground\">No categories found.</div>;\n\n  return (\n    <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n      {categories.map((category: Category) => (\n        <a key={category.slug} href={`/categories/${category.slug}`} className=\"group flex items-center gap-3 p-4 border rounded-lg bg-card hover:bg-muted transition-colors\">\n          <CategoryIcon className=\"w-5 h-5 text-primary\" />\n          <span className=\"font-semibold text-card-foreground group-hover:text-primary\">{category.name}</span>\n        </a>\n      ))}\n    </div>\n  );\n}"],"mappings":"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","names":["jsx","useEffect","jsx","jsxs","jsx","jsxs","jsx","jsxs","jsxs","jsx","useSWR","useState","useSWR","jsx","jsxs","useState","useSWR","jsx","jsxs","useSWR","useState","useSWR","ArrowRight","jsx","jsxs","PostCard","jsx","jsxs","useState","useSWR","PostCard","useSWR","jsx","jsxs","useSWR","useSWR","jsx","jsxs","useSWR"]}